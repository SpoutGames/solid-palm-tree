<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-60</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables
//setup
if (global.launch = 1)
{
    instance_create(x,y,obj_fade)
    global.launch = 0
}
title_screen = 0
pause = 0
line = 1
development = 1
if (file_exists("Zer0_save.dat"))
{
    global.saved = 1
}
Low = 2
Medium = 4
High = 8
particles = High
Master_volume = 100

//for level selection in world select
overworld = 0
world = 0
complete = 0
lock = 0
spot = 0
in_level = 0
w_1_x = 1
w_1_y = 1
//lanes
current_position = 2
lane_1 = 0
lane_2 = 0

//related to player
HUD_display = 0
player_health_max = global.player_health_max
player_health = global.player_health
HUD_width_max = 0
HUD_width = 0
HUD_fade = 0
space_press = 0
number_values = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///main block
/* 
-fix camera looking up and down
-add in new game transition to first world
-design system to determine where player has finished levels and maintain path open
*/

//inputs
key_confirm = global.key_confirm
key_down = global.key_down
key_up = global.key_up
player_health_max = global.player_health_max

//development
if (development = 1)
{
    global.developmet = 1
    if (keyboard_check_pressed(vk_backspace))
    {
        global.fade = -1
        instance_create(x,y,obj_fade)
    }
    if (keyboard_check_pressed(vk_numpad1))
    {
        global.fade = -2
        instance_create(x,y,obj_fade)
    }
    if (keyboard_check_pressed(ord("O")))
    {
        global.wall_jump = 1
    }
    if (keyboard_check_pressed(ord("P")))
    {
        global.wall_jump = 0
    }
    if (keyboard_check_pressed(ord("K")))
    {
        global.multiple_jump = 1
    }
    if (keyboard_check_pressed(ord("L")))
    {
        global.multiple_jump = 0
    }
    if (keyboard_check_pressed(ord("U")))
    {
        player_health += 1
    }
    if (keyboard_check_pressed(ord("H")))
    {
        player_health -= 1
    }
    if (keyboard_check_pressed(ord("M")))
    {
        global.fade = -3
        instance_create(x,y,obj_fade)
    }
    if (keyboard_check_pressed(ord("Y")))
    {
        global.lane = 1 
    }
    if (keyboard_check_pressed(ord("G")))
    {
        global.lane = 0
    }
}

//checks
if (file_exists("Zero_save.dat"))
{
    global.saved = 1
}
//for cutscenes
if (room = rm_intro_cs)
{
    if (instance_exists(obj_cs_control))
    {
        obj_cs_control.cutscene = 1
    }
}

//paused
if (global.pause = 0)
{
    if (keyboard_check_pressed(vk_space))
    {
        if (!instance_exists(obj_cs_control))
        {
            global.pause = 1
        }
        if (instance_exists(obj_player))
        {
            space_press = 1
            line = 0
        }
        if (room =  rm_overworld)
        {
            space_press = 1
            line = 0
        }
        keyboard_clear(vk_space)
    }
}
if (global.pause = 1)
{
    if (keyboard_check_pressed(vk_space))
    {
        if (!instance_exists(obj_cs_control))
        {
            global.pause = 0
        }
        space_press = 0
        keyboard_clear(vk_space)
    }
}
//music check
/*
if (!instance_exists(obj_jukebox))
{
    instance_create(1,1,obj_jukebox)
}
*/
//control
/*
includes resets
*/
if (room != rm_title_screen)
{
    global.title_screen = 0
}
if (room = rm_overworld)
{
    overworld = 1
}
else
{
    overworld = 0
}

//global.title_screen
if (global.title_screen = 1)
{
    //arrow movement
    if (keyboard_check_pressed(key_down))
    {
        line += 1
    }
    if (keyboard_check_pressed(key_up))
    {
        line -= 1
    }
    //arrow placement
    line = clamp(line,1,5)
    if (line = 1)
    {
        arrow_up = false
        arrow_down = true
    }
    else if (line != 1)
    {
        arrow_up = true
        arrow_down = true
        if (line = 5)
        {
            arrow_up = true
            arrow_down = false
        }
        else if (line != 5)
        {
            arrow_up = true
            arrow_down = true
        }
    }
    //selection
    //newgame
    if (line = 1)
    {
        if (keyboard_check_pressed(key_confirm))
        {
            global.fade = 1
            instance_create(1,1,obj_fade)
        }
    }
    //continue
    if (line = 2)
    {
        if (keyboard_check_pressed(key_confirm))
        {
            if (global.saved = 1)
            {
                global.fade = 2
                instance_create(1,1,obj_fade)
            }
            if (global.saved = 0)
            {
                
            }
        }
    }
    if (line = 3)
    {
        if (keyboard_check_pressed(key_confirm))
        {
            line = 1
            global.title_screen = 2
            keyboard_clear(key_confirm)
        }
    }
    if (line = 4)
    {
        if (keyboard_check_pressed(key_confirm))
        {
            global.title_screen = 6
            keyboard_clear(key_confirm)
        }
    }
    if (line = 5)
    {
        if (keyboard_check_pressed(key_confirm))
        {
            game_end()
        }
    }
}
//options
if (global.title_screen = 2)
{
    //arrow movement
    if (keyboard_check_pressed(key_down))
    {
        line += 1
    }
    if (keyboard_check_pressed(key_up))
    {
        line -= 1
    }
    //arrow placement
    line = clamp(line,1,3)
    if (line = 1)
    {
        arrow_up = false
        arrow_down = true
    }
    if (line = 2)
    {
        arrow_up = true
        arrow_down = true
    }
    if (line = 3)
    {
        arrow_up = true
        arrow_down = false
    }
    //selection
    if (line = 1)
    {
        //Audio and video options
        if (keyboard_check_pressed(key_confirm))
        {
            global.title_screen = 3
            keyboard_clear(key_confirm)
        }
    }
    if (line = 2)
    {
        //Control options
        if (keyboard_check_pressed(key_confirm))
        {
            line = 1
            global.title_screen = 4
            keyboard_clear(key_confirm)
        }
    }
    if (line = 3)
    {
        //Back
        if (keyboard_check_pressed(key_confirm))
        {
            line = 3
            global.title_screen = 1
            keyboard_clear(key_confirm)
        }
    }
}
//Audio and Video options
if (global.title_screen = 3)
{
    //arrow movement
    if (keyboard_check_pressed(key_down))
    {
        line += 1
    }
    if (keyboard_check_pressed(key_up))
    {
        line -= 1
    }
    line = clamp(line,1,4)
    //all video options
    /* 
    Master volume
    Full screen
    Particle amount
    back
    */
    //arrow placement and selection
    if (line = 1)
    {
        arrow_up = false
        arrow_down = true
        if (Master_volume = 100)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                Master_volume = 80
                keyboard_clear(key_confirm)
            }
        }
        if (Master_volume = 80)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                Master_volume = 60
                keyboard_clear(key_confirm)
            }
        }
        if (Master_volume = 60)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                Master_volume = 40
                keyboard_clear(key_confirm)
            }
        }
        if (Master_volume = 40)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                Master_volume = 20
                keyboard_clear(key_confirm)
            }
        }
        if (Master_volume = 20)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                Master_volume = 0
                keyboard_clear(key_confirm)
            }
        }
        if (Master_volume = 0)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                Master_volume = 100
                keyboard_clear(key_confirm)
            }
        }
    }
    if (line = 2)
    {
        arrow_up = true
        arow_down = true
        if (keyboard_check_pressed(key_confirm))
        {
            if window_get_fullscreen()
            {
                window_set_fullscreen(false)
            }
            else
            {
                window_set_fullscreen(true)
            }
            keyboard_clear(key_confirm)
        }
    }
    if (line = 3)
    {
        arrow_up = true
        arrow_down = true
        if (particles = Low)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                particles = Medium
                keyboard_clear(key_confirm)
            }
        }
        if (particles = Medium)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                particles = High
                keyboard_clear(key_confirm)
            }
        }
        if (particles = High)
        {
            if (keyboard_check_pressed(key_confirm))
            {
                particles = Low
                keyboard_clear(key_confirm)
            }
        }
    }
    if (line = 4)
    {
        arrow_up = true
        arrow_down = false
        if (keyboard_check_pressed(key_confirm))
        {
            line = 1
            global.title_screen = 2
            keyboard_clear(key_confirm)
        }
    }
}
//control options
if (global.title_screen = 4)
{
    //arrow movement
    if (keyboard_check_pressed(key_down))
    {
        line += 1
    }
    if (keyboard_check_pressed(key_up))
    {
        line -= 1
    }
    line = clamp(line,1,1)
    //all control options
    /*
    If I can add these, will all:
    re-mapping control options
    default button
    
    other wise, just shows map of controls for now
    */
    //back
    if (line = 1)
    {
        if (keyboard_check_pressed(key_confirm))
        {
            line = 2
            global.title_screen = 2
            keyboard_clear(key_confirm)
        }
    }
}

//credits
if (global.title_screen = 6)
{
    //back to main menu
    if (keyboard_check_pressed(key_confirm))
    {
        global.title_screen = 1
        keyboard_clear(key_confirm)
    }
    /*
    litterally just me in here
    */
}

//cutscene control
if (room = rm_intro_cs)
{
    instance_create(1,1,obj_cs_control)
}
//player HUD
/*
everything related to player HUD
*/
if (instance_exists(obj_player))
{
    HUD_width_max = player_health_max*8
    HUD_width = player_health*8
    HUD_display = 1
    if (player_health = player_health_max)
    {
        if (HUD_fade != 0)
        {
            HUD_fade -= .05
        }
    }
    if (player_health &lt; player_health_max)
    {   
        if (HUD_fade != 1)
        {
            HUD_fade += .05
        }
    }
}
if (!instance_exists(obj_player))
{
    HUD_display = 0
}

player_health = clamp(player_health,0,player_health_max)

//player pause menu screen
if (instance_exists(obj_player))
{
    if (space_press = 1)
    {   
        if (keyboard_check_pressed(key_up))
        {
            line -= 1
        }
        if (keyboard_check_pressed(key_down))
        {
            line += 1
        }
        line = clamp(line,0,4)
        if (line = 0)
        {
            menu_up = false
            menu_down = true
            if (keyboard_check_pressed(key_confirm))
            {
                space_press = 0
                global.pause = 0
                keyboard_clear(key_confirm)
            }
        }
        if (line = 1)
        {
            menu_up = true
            menu_down = true
            if (keyboard_check_pressed(key_confirm))
            {
                space_press = 2
                line = 0
                keyboard_clear(key_confirm)
            }
        }
        if (line = 2)
        {
            menu_up = true
            menu_down = true
            if (keyboard_check_pressed(key_confirm))
            {
                global.fade = 4
                if (!instance_exists(obj_fade))
                {
                    instance_create(1,1,obj_fade)
                }
                space_press = 0
                line = 0
                keyboard_clear(key_confirm)
            }
        }
        if (line = 3)
        {
            menu_up = true
            menu_down = true
            if (keyboard_check_pressed(key_confirm))
            {
                global.fade = 3
                if (!instance_exists(obj_fade))
                {
                    instance_create(1,1,obj_fade)
                }
                line = 1
                space_press = 0
                keyboard_clear(key_confirm)
            }
        }
        if (line = 4)
        {
            menu_up = true
            menu_down = false
            if (keyboard_check_pressed(key_confirm))
            {
                game_end()
            }
        }
    }
    //player pause menu options
    if (space_press = 2)
    {
        if (keyboard_check_pressed(key_up))
        {
            line -= 1
        }
        if (keyboard_check_pressed(key_down))
        {
            line += 1
        }
        line = clamp(line,0,3)
        //arrow placement and selection
        //volume
        if (line = 0)
        {
            menu_up = false
            menu_down = true
            if (Master_volume = 100)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    Master_volume = 80
                    keyboard_clear(key_confirm)
                }
            }
            if (Master_volume = 80)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    Master_volume = 60
                    keyboard_clear(key_confirm)
                }
            }
            if (Master_volume = 60)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    Master_volume = 40
                    keyboard_clear(key_confirm)
                }
            }
            if (Master_volume = 40)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    Master_volume = 20
                    keyboard_clear(key_confirm)
                }
            }
            if (Master_volume = 20)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    Master_volume = 0
                    keyboard_clear(key_confirm)
                }
            }
            if (Master_volume = 0)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    Master_volume = 100
                    keyboard_clear(key_confirm)
                }
            }
        }
        //fullscreen
        if (line = 1)
        {
            menu_up = true
            menu_down = true
            if (keyboard_check_pressed(key_confirm))
            {
                if window_get_fullscreen()
                {
                    window_set_fullscreen(false)
                }
                else
                {
                    window_set_fullscreen(true)
                }
                keyboard_clear(key_confirm)
            }
        }
        //particles
        if (line = 2)
        {
            menu_up = true
            menu_down = true
            if (particles = Low)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    particles = High
                    keyboard_clear(key_confirm)
                }
            }
            if (particles = Medium)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    particles = Low
                    keyboard_clear(key_confirm)
                }
            }
            if (particles = High)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    particles = Medium
                    keyboard_clear(key_confirm)
                }
            }
        }
        //back
        if (line = 3)
        {
            menu_up = true
            menu_down = false
            if (keyboard_check_pressed(key_confirm))
            {
                space_press = 1
                line = 1
                keyboard_clear(key_confirm)
            }
        }
    }
}
//overworld pause menu screens
if (!instance_exists(obj_player))
{
    if (global.save_preperation = 0)
    {
        if (space_press = 1)
        {
            //line selection and clamp
            if (keyboard_check_pressed(key_up ))
            {
                line -= 1
                keyboard_clear(key_up)
            }
            if (keyboard_check_pressed(key_down))
            {
                line += 1
                keyboard_clear(key_down)
            }
            line = clamp(line,1,5)
            
            //continue
            if (line = 1)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    space_press = 0
                    global.pause = 0
                    keyboard_clear(key_confirm)
                }
                menu_up = false
                menu_down = true
            }
            //options
            if (line = 2)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    space_press = 2
                    keyboard_clear(key_confirm)
                }
                menu_up = true
                menu_down = true
            }
            //save game
            if (line = 3)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    global.save_preperation = 1
                    instance_create(1,1,obj_save)
                    keyboard_clear(key_confirm)
                }
                menu_up = true
                menu_down = true
            }
            //main menu
            if (line = 4)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    global.fade = 3
                    instance_create(1,1,obj_fade)
                }
                menu_up = true
                menu_down = true
            }
            //exit game
            if (line = 5)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    game_end()
                    keyboard_clear(key_confirm)
                }
                menu_up = true
                menu_down = false
            }
        }
        //options menu
        if (space_press = 2)
        {
            //line selection and clamp
            if (keyboard_check_pressed(key_up))
            {
                line -= 1
                keyboard_clear(key_up)
            }
            if (keyboard_check_pressed(key_down))
            {
                line += 1
                keyboard_clear(key_down)
            }
            line = clamp(line,1,4)
            //master volume
            if (line = 1)
            {
                if (Master_volume = 100)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        Master_volume = 80
                        keyboard_clear(key_confirm)
                    }
                }
                if (Master_volume = 80)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        Master_volume = 60
                        keyboard_clear(key_confirm)
                    }
                }
                if (Master_volume = 60)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        Master_volume = 40
                        keyboard_clear(key_confirm)
                    }
                }
                if (Master_volume = 40)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        Master_volume = 20
                        keyboard_clear(key_confirm)
                    }
                }
                if (Master_volume = 20)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        Master_volume = 0
                        keyboard_clear(key_confirm)
                    }
                }
                if (Master_volume = 0)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        Master_volume = 100
                        keyboard_clear(key_confirm)
                    }
                }
                menu_up = false
                menu_down = true
            }
            //fullscreen
            if (line = 2)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    if window_get_fullscreen()
                    {
                        window_set_fullscreen(false)
                    }
                    else
                    {
                        window_set_fullscreen(true)
                    }
                    keyboard_clear(key_confirm)
                }
                menu_up = true
                menu_down = true
            }
            //particles
            if (line = 3)
            {
                if (particles = High)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        particles = Medium
                        keyboard_clear(key_confirm)
                    }
                }
                if (particles = Medium)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        particles = Low
                        keyboard_clear(key_confirm)
                    }
                }
                if (particles = Low)
                {
                    if (keyboard_check_pressed(key_confirm))
                    {
                        particles = High
                        keyboard_clear(key_confirm)
                    }
                }
                menu_up = true
                menu_down = true
            }
            //back
            if (line = 4)
            {
                if (keyboard_check_pressed(key_confirm))
                {
                    line = 1
                    space_press = 1
                    keyboard_clear(key_confirm)
                }
                menu_up = true
                menu_down = false
            }
        }
    }
}
//overworld related
//overworld check
if (overworld = 1)
{
    //lane openings
    if (global.lane_1 = 1)
    {
        lane_1 = 1
    }
    if (global.lane_2 = 1)
    {
        lane_2 = 1
    }
    
    /*
        current position will be set up in end level or obj_fade
    */
    
    //lane control
    if (global.pause = 0)
    {
        if (current_position = 3)
        {
            //enter level
            if (keyboard_check_pressed(key_confirm))
            {
                player_health = player_health_max
                global.fade = 6
                instance_create(x,y,obj_fade)
            }
            //to level 1
            if (keyboard_check_pressed(key_down))
            {
                current_position = 2
            }
        }
        if (current_position = 2)
        {
            //enter level
            if (keyboard_check_pressed(key_confirm))
            {
                player_health = player_health_max
                global.fade = 5
                instance_create(x,y,obj_fade)
            }
            //to enigma hub
            if (keyboard_check_pressed(key_down))
            {
                if (lane_1 = 1)
                {
                    current_position = 1
                }
            }
            //to observatory
            if (keyboard_check_pressed(key_up))
            {
                if (lane_2 = 1)
                {
                    current_position = 3
                }
                
            }
        }
        if (current_position = 1)
        {
            //enter level
            if (keyboard_check_pressed(key_confirm))
            {
                global.fade = 1
                instance_create(1,1,obj_fade)
                keyboard_clear(key_confirm)
            }
            //to level 1
            if (keyboard_check_pressed(key_up))
            {
                if (lane_1 = 1)
                {
                    current_position = 2
                }
                keyboard_clear(key_up)
            }
            //to level 2
            if (keyboard_check_pressed(key_down))
            {
                if (lane_3 = 1)
                {
                    current_position = 4
                }
                keyboard_clear(key_down)
            }     
        }
    }
}

//camera
if (instance_exists(obj_player))
{
    in_level = 1
}
else
{
    in_level = 0
}
if (global.title_screen = 0)
{
    if (in_level = 1)
    {
        //x and y are set in obj_camera
        view_xview = -view_wview/2 + x
        view_yview = -view_hview/2 + y
    }
    if (in_level = 0)
    {
        //x and y are set in camera
        view_xview = -view_wview/2 + x
        view_yview = -view_hview/2 + y
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///main draw block

//development
if (development = 1)
{
    draw_set_color(c_ltgray)
    draw_set_alpha(.8)
    draw_set_font(fnt_default)
    draw_text_ext_transformed(view_xview+5,view_yview+10,"Pause_Development_build",10,500,.8,.8,0)
    //wall jump ability
    draw_text_ext_transformed(view_xview+5,view_yview+25,"wall jump:",10,500,.8,.8,0)
    draw_text_ext_transformed(view_xview+90,view_yview+25,global.wall_jump,10,500,.8,.8,0)
    
    //multiple jump ability
    draw_text_ext_transformed(view_xview+5,view_yview+50,"multiple jump:",10,500,.8,.8,0)
    draw_text_ext_transformed(view_xview+90,view_yview+50,global.multiple_jump,10,500,.8,.8,0)
    
    //maximum amount of jumps left
    draw_text_ext_transformed(view_xview+5,view_yview+75,"max jumps:",10,500,.8,.8,0)
    draw_text_ext_transformed(view_xview+90,view_yview+75,global.jumps_left_max,10,500,.8,.8,0)
    
    //time
    draw_text_ext_transformed(view_xview+5,view_yview+100,"time:",10,500,.8,.8,0)
    draw_text_ext_transformed(view_xview+55,view_yview+100,global.time,10,500,.8,.8,0)
    
    //energy
    draw_text_ext_transformed(view_xview+5,view_yview+125,global.energy,10,500,.8,.8,0)
}

//title screen
if (global.title_screen = 1) 
{
    //selection
    draw_set_color(c_black)
    draw_set_font(fnt_title)
    draw_set_alpha(1)
    draw_sprite_ext(spr_x_button,1,50,100+line*75,.75,.75,0,c_white,1)
    if (arrow_up = true)
    {
        draw_sprite_ext(spr_pg_up,1,50,50+line*75,.75,.75,0,c_white,1)
    }
    if (arrow_down = true)
    {
        draw_sprite_ext(spr_pg_down,1,50,150+line*75,.75,.75,0,c_white,1)
    }
    //text
    //new game
    draw_text_ext_transformed(75,80+1*75,"New game",10,200,2,2,0)
    //continue gray
    if (global.saved = 0)
    {
        draw_set_color(c_gray)
        draw_text_ext_transformed(75,80+2*75,"Continue",10,200,2,2,0)
    }
    if (global.saved = 1)
    {
        draw_set_color(c_black)
        draw_text_ext_transformed(75,80+2*75,"Continue",10,200,2,2,0)
    }
    //options
    draw_set_color(c_black)
    draw_text_ext_transformed(75,80+3*75,"Options",10,200,2,2,0)
    //credits
    draw_text_ext_transformed(75,80+4*75,"Credits",10,200,2,2,0)
    //exit
    draw_text_ext_transformed(75,80+5*75,"Exit",10,200,2,2,0)
}
//options
if (global.title_screen = 2)
{
    //selection
    draw_set_color(c_black)
    draw_set_font(fnt_title)
    draw_set_alpha(1)
    if (line &gt; 0 &amp;&amp; line &lt; 3)
    {
        draw_sprite_ext(spr_x_button,1,50,100+line*75,.75,.75,0,c_white,1)
    }
    if (line = 3)
    {
        draw_sprite_ext(spr_x_button,1,50,100+5*75,.75,.75,0,c_white,1)
    }
    if (arrow_up = true)
    {
        if (line &gt; 0 &amp;&amp; line &lt; 3)
        {
            draw_sprite_ext(spr_pg_up,1,50,50+line*75,.75,.75,0,c_white,1)
        }
        if (line = 3)
        {
            draw_sprite_ext(spr_pg_up,1,50,50+5*75,.75,.75,0,c_white,1)
        }
    }
    if (arrow_down = true)
    {
        if (line &gt; 0 &amp;&amp; line &lt; 3)
        {
            draw_sprite_ext(spr_pg_down,1,50,150+line*75,.75,.75,0,c_white,1)
        }
        if (line = 3)
        {
            draw_sprite_ext(spr_pg_down,1,50,150+5*75,.75,.75,0,c_white,1)
        }
    }
    //text
    //Audio and video options
    draw_text_ext_transformed(75,80+1*75,"Audio and Video options",10,400,2,2,0)
    //controls
    draw_text_ext_transformed(75,80+2*75,"Controls",10,200,2,2,0)
    //back
    draw_text_ext_transformed(75,80+5*75,"Back",10,200,2,2,0)
}
//Audio and Video options
if (global.title_screen = 3)
{
    draw_set_color(c_black)
    draw_set_font(fnt_title)
    draw_set_alpha(1)
    //Graphics
    if (line &gt; 0 &amp;&amp; line &lt; 4)
    {
        draw_sprite_ext(spr_x_button,1,50,100+line*75,.75,.75,0,c_white,1)
    }
    if (line = 4)
    {
        draw_sprite_ext(spr_x_button,1,50,100+8*75,.75,.75,0,c_white,1)
    }
    if (arrow_up = true)
    {
        if (line &gt; 0 &amp;&amp; line &lt; 4)
        {
            draw_sprite_ext(spr_pg_up,1,50,50+line*75,.75,.75,0,c_white,1)
        }
        if (line = 4)
        {
            draw_sprite_ext(spr_pg_up,1,50,50+8*75,.75,.75,0,c_white,1)
        }
    }
    if (arrow_down = true)
    {
        if (line &gt; 0 &amp;&amp; line &lt; 4)
        {
            draw_sprite_ext(spr_pg_down,1,50,150+line*75,.75,.75,0,c_white,1)
        }
        if (line = 4)
        {
            draw_sprite_ext(spr_pg_down,1,50,150+8*75,.75,.75,0,c_white,1)
        }
    }
    //Text
    //Volume
    draw_text_ext_transformed(75,80+1*75,"Master Volume:",10,400,2,2,0)
    draw_text_ext_transformed(375,80+1*75,Master_volume,10,400,2,2,0)
    //Fullscreen
    draw_text_ext_transformed(75,80+2*75,"Fullscreen:",10,400,2,2,0)
    //Particles
    draw_text_ext_transformed(75,80+3*75,"Particles:",10,400,2,2,0)
    if (particles = Low)
    {
        draw_text_ext_transformed(250,80+3*75,"Low",10,400,2,2,0)
    }
    if (particles = Medium)
    {
        draw_text_ext_transformed(250,80+3*75,"Medium",10,400,2,2,0)
    }
    if (particles = High)
    {
        draw_text_ext_transformed(250,80+3*75,"High",10,400,2,2,0)
    }
    //Back
    draw_text_ext_transformed(75,80+8*75,"back",10,400,2,2,0)
}
//Control options
if (global.title_screen = 4)
{
    draw_set_color(c_black)
    draw_set_font(fnt_title)
    draw_set_alpha(1)
    //Graphics
    draw_sprite_ext(spr_x_button,1,50,100+8*75,.75,.75,0,c_white,1)
    //temp border around text
    draw_roundrect_ext(50,55,view_wview-50,400,0,0,1)
    //Text
    //control map
    draw_text_ext_transformed(75,80+0*75,"Move left:###Up:###Jump:###Time slow:###Melee attack:###Pause:",10,400,1.5,1.5,0)
    draw_text_ext_transformed(575,80+0*75,"Move Right:###Down:###Dash:###Time fast:###Ranged attack:###",10,400,1.5,1.5,0)
    //buttons
    draw_text_ext_transformed(250,80+0*75,"Arrow_left###Arrow_up###X_key###Z_key###D_key###Space_key",10,400,1.5,1.5,0)
    draw_text_ext_transformed(800,80+0*75,"Arrow_right###Arrow_down###Shift_key###A_key###C_key###",10,400,1.5,1.5,0)
    //temp notification
    draw_text_ext_transformed(50,450,"All controls are temporarily locked to pre-determined key's.##This will change in later builds",10,600,1.5,1.5,0)
    //back
    draw_text_ext_transformed(75,80+8*75,"Back",10,400,2,2,0)
}
//Credits
   

//player HUD
if (HUD_display = 1)
{
    if (instance_exists(obj_player))
    {
        draw_set_alpha(HUD_fade)
        draw_set_font(fnt_HUD)
        //draw's players current HP
        draw_roundrect_colour_ext(obj_player.x-HUD_width/2,obj_player.y-12,obj_player.x+HUD_width/2,obj_player.y-6,0,0,c_maroon,c_maroon,0)
        
        //draws a border around curret HP
        draw_set_color(c_white)
        draw_roundrect_colour_ext(obj_player.x-HUD_width_max/2,obj_player.y-12,obj_player.x+HUD_width_max/2,obj_player.y-6,0,0,c_white,c_white,1)
        
        //displays current HP in numerical value
        if (number_values = 1)
        {
            draw_text_ext_transformed(obj_player.x-1,obj_player.y-16,player_health,10,200,.5,.5,0)
        }
    }
}

//pause menu's
if (global.pause = 1)
{
    //if not on title screens
    if (global.title_screen = 0)
    {
        //if no player
        draw_set_alpha(.8)
        if (!instance_exists(obj_player))
        {
            draw_roundrect_colour_ext(obj_main-view_wview,obj_main-view_hview,obj_main+view_wview,obj_main+view_hview,0,0,c_black,c_black,0)
            //border
            draw_set_alpha(1)
            draw_roundrect_ext(x-200,y-100,x+200,y+200,10,0,1)
            //draw text here to let player know screen is paused
            draw_text_ext_transformed(view_wview/2,view_yview,"paused",10,100,1,1,0)
            //over world pause menu
            if (overworld = 1)
            {
                draw_roundrect_colour_ext(1,1,1,1,0,0,c_white,c_white,0)
                //first menu
                if (space_press = 1)
                {
                    draw_set_color(c_white)
                    //draw text here
                    draw_text_ext_transformed(x-150,y-50,"Continue",10,100,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y,"Options",10,100,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y+50,"Save",10,100,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y+100,"Main Menu",10,100,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y+150,"Exit",10,100,1.5,1.5,0)
                    draw_set_color(c_black)
                    
                    //cursor placements
                    draw_sprite_ext(spr_x_button,1,x-180,(y-85)+50*line,.8,.8,0,c_white,1)
                    if (menu_up = true)
                    {
                        draw_sprite_ext(spr_pg_up,1,x-180,(y-125)+50*line,.8,.8,0,c_white,1)
                    }
                    if (menu_down = true)
                    {
                        draw_sprite_ext(spr_pg_down,1,x-180,(y-45)+50*line,.8,.8,0,c_white,1)
                    }
                }
                //second menu options
                if (space_press = 2)
                {
                    //text
                    draw_set_color(c_white)
                    draw_text_ext_transformed(x-150,y-50,"Master Volume",10,1000,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y,"Fullscreen",10,100,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y+50,"Particles",10,100,1.5,1.5,0)
                    draw_text_ext_transformed(x-150,y+150,"Back",10,100,1.5,1.5,0)
                    draw_set_color(c_black)
                    //cursor palcements
                    if (line &lt; 4)
                    {
                        draw_sprite_ext(spr_x_button,1,x-180,(y-85)+line*50,.8,.8,0,c_white,1)
                        if (menu_up = true)
                        {
                            draw_sprite_ext(spr_pg_up,1,x-180,(y-125)+line*50,.8,.8,0,c_white,1)
                        }
                        if (menu_down = true)
                        {
                            draw_sprite_ext(spr_pg_down,1,x-180,(y-45)+line*50,.8,.8,0,c_white,1)
                        }   
                    }
                    if (line = 4)
                    {
                        draw_sprite_ext(spr_x_button,1,x-180,(y-85)+5*50,.8,.8,0,c_white,1)
                        if (menu_up = true)
                        {
                            draw_sprite_ext(spr_pg_up,1,x-180,(y-125)+5*50,.8,.8,0,c_white,1)
                        }
                        if (menu_down = true)
                        {
                            draw_sprite_ext(spr_pg_down,1,x-180,(y-45)+5*50,.8,.8,0,c_white,1)
                        }
                    }
                }
            }
        }
        //if player exists
        if (space_press &gt; 0)
        {
            if (instance_exists(obj_player))
            {
                draw_roundrect_colour_ext(obj_player.x-view_wview,obj_player.y-view_hview,obj_player.x+view_wview,obj_player.y+view_hview,0,0,c_black,c_black,0)
                draw_set_alpha(1)
                //draw border around menu
                draw_roundrect_colour_ext(obj_player.x-100,obj_player.y-150,obj_player.x+100,obj_player.y,0,0,c_white,c_white,1)
                
                //first menu
                if (space_press = 1)
                {
                    //draw text
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-140,"Continue",10,100,1,1,0)
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-110,"Options",10,100,1,1,0)
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-80,"Overworld",10,100,1,1,0)
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-50,"Main menu",10,100,1,1,0)
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-20,"Exit game",10,100,1,1,0)
                    
                    //cursor placements
                    draw_sprite_ext(spr_x_button,1,obj_player.x-80,(obj_player.y-130)+line*30,.4,.4,0,c_white,1)
                    if (menu_up = true)
                    {
                        draw_sprite_ext(spr_pg_up,1,obj_player.x-80,(obj_player.y-150)+line*30,.4,.4,0,c_white,1)
                    }
                    if (menu_down = true)
                    {
                        draw_sprite_ext(spr_pg_down,1,obj_player.x-80,(obj_player.y-110)+line*30,.4,.4,0,c_white,1)
                    }
                }
                //second menu Options
                if (space_press = 2)
                {
                    //draw plain text
                    //volume
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-140,"Master volume:",10,100,1,1,0)
                    draw_text_ext_transformed(obj_player.x+40,obj_player.y-140,Master_volume,10,400,1,1,0)
                    //fullscreen
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-110,"Fullscreen:",10,100,1,1,0)
                    //particles
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-80,"Particles",10,100,1,1,0)
                    if (particles = Low)
                    {
                        draw_text_ext_transformed(obj_player.x,obj_player.y-80,"Low",10,400,1,1,0)
                    }
                    if (particles = Medium)
                    {
                        draw_text_ext_transformed(obj_player.x,obj_player.y-80,"Medium",10,400,1,1,0)
                    }
                    if (particles = High)
                    {
                        draw_text_ext_transformed(obj_player.x,obj_player.y-80,"High",10,400,1,1,0)
                    }
                    //back
                    draw_text_ext_transformed(obj_player.x-60,obj_player.y-20,"Back",10,100,1,1,0)
                    //cursor placements
                    if (line &lt; 3)
                    {
                        draw_sprite_ext(spr_x_button,1,obj_player.x-80,(obj_player.y-130)+line*30,.4,.4,0,c_white,1)
                        if (menu_up = true)
                        {
                            draw_sprite_ext(spr_pg_up,1,obj_player.x-80,(obj_player.y-150)+line*30,.4,.4,0,c_white,1)
                        }
                        if (menu_down = true)
                        {
                            draw_sprite_ext(spr_pg_down,1,obj_player.x-80,(obj_player.y-110)+line*30,.4,.4,0,c_white,1)
                        }
                    }
                    if (line = 3)
                    {
                        draw_sprite_ext(spr_x_button,1,obj_player.x-80,(obj_player.y-130)+4*30,.4,.4,0,c_white,1)
                        if (menu_up = true)
                        {
                            draw_sprite_ext(spr_pg_up,1,obj_player.x-80,(obj_player.y-150)+4*30,.4,.4,0,c_white,1)
                        }
                        if (menu_down = true)
                        {
                            draw_sprite_ext(spr_pg_down,1,obj_player.x-80,(obj_player.y-110)+4*30,.4,.4,0,c_white,1)
                        }
                    }
                }
            }
        }
    }
}

//overworld
if (overworld = 1)
{
    /* 
        base location is 0,0. Lanes will light up once level area is cleared
    */
    //setup for overworld
    draw_set_color(c_ltgray)
    draw_set_font(fnt_HUD)
    //player set up
    
    //draw_sprite_ext(spr_overworld_player,1,w_1_x,w_1_y,1,1,0,c_white,1)
    
    //lane selection
    if (lane_1 = 1)
    {   
        draw_set_color(c_dkgray)
        draw_roundrect_ext(1,1,3,100,0,0,0,)
    }
    else
    {
        draw_set_color(c_ltgray )
        draw_roundrect_ext(1,1,3,100,0,0,0)
    }
    if (lane_2 = 1)
    {
        draw_set_color(c_dkgray)
        draw_roundrect_ext(5,1,8,100,0,0,0)
    }
    else
    {
        draw_set_color(c_ltgray)
        draw_roundrect_ext(5,1,8,100,0,0,0)
    }
}

draw_set_alpha(1)
draw_set_font(fnt_default)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
