<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playeridle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation code
    //center camera
        if (instance_exists(obj_main))
        {
            obj_main.x = x
            obj_main.y = y
        }

    //movement
        attacking = 0
        hsp_carry = 0
        movement = 0
        moveframe = 0
        climb = 0
        vsp = 0
        jspd = -6
        gravy = .5
        jl_max = global.jl_max
        jl = jl_max
        xadd = 1
        next = 0
        dir = 0
        dash = 0
        dash_reset = 0

    //spawn determine
        camera_xmove = 0
        camera_ymove = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
    //variables
        //keyboard + controller
            key_left = -(keyboard_check(global.key_left) || gamepad_button_check(0,global.ckey_left))
            key_right = (keyboard_check(global.key_right) || gamepad_button_check(0,global.ckey_right))
            key_down = (keyboard_check(global.key_down) || gamepad_button_check(0,global.ckey_down))
            key_up = (keyboard_check(global.key_up) || gamepad_button_check(0,global.ckey_up))
            key_jump = (keyboard_check_pressed(global.key_jump) || gamepad_button_check_pressed(0,global.ckey_jump))
            key_jumpheld = (keyboard_check(global.key_jump) || gamepad_button_check(0,global.ckey_jump))
            key_shift = (keyboard_check_pressed(global.key_shift) || gamepad_button_check(0,global.ckey_shift))
        on_ground = place_meeting(x,y+1,obj_wall)
        on_platform = place_meeting(x,y+1,obj_platform)
        on_moving_platform = place_meeting(x,y+2,obj_moving_platform)
        wall_left = place_meeting(x-1,y,obj_wall)
        wall_right = place_meeting(x+1,y,obj_wall)
        jl_max = global.jl_max
        touchingNPC = (place_meeting(x,y,obj_aria) || place_meeting(x,y,obj_hudgin) || place_meeting(x,y,obj_ilya))

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///main (move, interact)
    //movement
        //setup
            if (!dash)
            {
                dir = key_left + key_right
                d_dir = image_xscale
            }
            //exit
                if (instance_exists(obj_exit))
                {
                    if (place_meeting(x,y,obj_exit))
                    {
                        if (key_down)
                        {
                            global.pause = 3
                        }
                    }
                }
        //horizontal movement
            if (global.pause = 0)
            {
                if (!dash)
                {
                    if (dir != 0)
                    {
                        if (movement &lt; 4)
                        {
                            moveframe += 1
                        }
                        if (moveframe &gt; 2)
                        {
                            if (movement &lt; 4)
                            {
                                movement += 1
                                frame = 0
                            }
                        }
                    }
                    else if (dir = 0)
                    {
                        if (movement != 0)
                        {
                            moveframe += 1
                        }
                        if (moveframe &gt; 2)
                        {
                            if (movement != 0)
                            {
                                movement -= 1
                                frame = 0
                            }
                        }
                    }
                }
                //crouch walking
                if (key_down)
                {
                    if (!dash)
                    {
                        movement_fnl = movement/2
                    }
                }
                    
                //dashing
                    //reset
                        if (dash &gt; 0)
                        {
                            dash -= 1
                        }
                        if (dash_reset &gt; 0)
                        {
                            dash_reset -= 1
                        }
                    //dash
                        if (global.dash = 1)
                        {
                            if (dash_reset = 0)
                            {
                                if (key_shift)
                                {
                                    movement_fnl = movement * 1.8
                                    dash = 10
                                    if (!on_ground)
                                    {
                                        dash_reset = 30
                                    }
                                    else
                                    {
                                        dash_reset = 30
                                    }
                                }   
                            }
                        }
                    
            //first horizontal calculation
                if (obj_main.player_dmgTaken = 0)
                {
                    if (!key_down)
                    {
                        if (!dash)
                        {
                            hsp = dir * movement
                        }
                    }
                    if (key_down)
                    {
                        hsp = dir * movement_fnl
                    }
                    if (dash)
                    {
                        hsp = d_dir * movement_fnl
                    }
                }
            //wall jumps
                if (!on_ground)
                {
                    if (global.wall_jump = 1)
                    {
                        if (key_jump)
                        {
                            if (wall_left)
                            {
                                movement = 0
                            }
                            if (wall_right)
                            {
                                movement = 0
                            }
                        }
                    }
                }
        //final horizontal calculation
            hsp_fnl = hsp + hsp_carry
            hsp_carry = 0
        
        
        
        //vertical movements
            //multi jumps
                if (on_ground)
                {
                    jl = jl_max
                    if (key_jump)
                    {
                        if (!key_down)
                        {
                            if (!attacking)
                            {
                                vsp = jspd
                            }
                        }
                    }
                }
                if (!on_ground)
                {
                    if (key_jump)
                    {
                        if (jl != 0)
                        {
                            if (global.wall_jump = 1)
                            {
                                if (!wall_left &amp;&amp; !wall_right)
                                {
                                    jl -= 1
                                    vsp = jspd
                                }
                            }
                            if (global.wall_jump = 0)
                            {
                                jl -= 1
                                vsp = jspd
                            }
                        }
                //wall jump vertical
                    if (global.wall_jump = 1)
                    {
                        if (wall_left || wall_right)
                        {
                            vsp = jspd*1.5
                        }
                    }
                }
            }
        //varying jump height
            if (vsp &lt; 0)
            {
                if (!key_jumpheld)
                {
                    vsp = max(vsp,jspd/3)
                }
            }
        
        //Gravity effects
            if (!on_ground)
            {
                if (attacking = 0)
                {
                    if (vsp &lt; 12)
                    {
                        if (global.wall_jump = 0)
                        {
                            vsp += gravy
                        }
                        if (global.wall_jump = 1)
                        {
                            if (vsp &lt; 0)
                            {
                                if (wall_left || wall_right)
                                {
                                    if (!place_meeting(x,y+32,obj_wall))
                                    {
                                        vsp += gravy
                                    }
                                    else
                                    {
                                        vsp += gravy
                                    }
                                }
                                else 
                                {
                                    vsp += gravy
                                }
                            }
                            if (vsp &gt;= 0)
                            {
                                if (wall_left || wall_right)
                                {
                                    if (vsp &lt; 3)
                                    {
                                        vsp += gravy/2
                                    }
                                    if (vsp &gt; 3)
                                    {
                                        vsp -= 1
                                    }
                                }
                                else
                                {
                                    vsp += gravy
                                }
                            }
                        }
                    }
                    if (vsp &gt;= 12)
                    {
                        if (global.wall_jump = 1)
                        {
                            if (wall_left || wall_right)
                            {
                                if (vsp &gt; 3)
                                {
                                    vsp -= 1
                                }
                            }
                        }
                    }
                }
            }
        //climbing
            if (climb = 0)
            {
                if (place_meeting(x,y,obj_climbable))
                {
                    if (key_up)
                    {
                        if (!attacking)
                        {
                            if (vsp &gt;= 0)
                            {
                                climb = 1
                            }
                        }
                    }
                }
            }
            if (climb = 1)
            {
                vsp = 0
                hsp_fnl = 0
                if (key_up)
                {
                    vsp = -2
                }
                if (key_down)
                {
                    vsp = 2
                }
                if (dir = -1)
                {
                    hsp_fnl = -2
                }
                if (dir = 1)
                {
                    hsp_fnl = 2
                }
                if (!place_meeting(x,y,obj_climbable))
                {
                    climb = 0
                }
                if (key_jump)
                {
                    climb = 0
                    vsp = jspd
                }
            }
        //final vertical calculation
            if (!dash)
            {
                vsp_fnl = vsp
            }
            else
            {
                vsp_fnl = 0
                vsp = 0
            }
            
        }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking
    //sword
        if (obj_main.weapon = obj_main.hudgin_sword)
        {
            if (obj_main.key_attack)
            {
                if (attacking = 0)
                {
                    attacking = 1
                }
                if (attacking &gt; 0)
                {
                    hsp_fnl = 0
                    vsp_fnl = 0
                }
            }
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision
    //horizontal
        if (global.pause = 0)
        {
            if (!place_meeting(x+hsp_fnl,y,obj_wall))
            {
                x = x + hsp_fnl
            }
            if (place_meeting(x+hsp_fnl,y,obj_wall))
            {
                yplus = 0
                while (!place_meeting(x+sign(hsp_fnl),y,obj_wall))
                {
                    x = x + sign(hsp_fnl)
                }
                hsp_fnl = 0
                momentum = 0
                frame = 0
                hsp = 0
                air_move = 0
            }
        //vertical
            if (!place_meeting(x,y+vsp_fnl,obj_wall))
            {
                y = y + vsp_fnl
            }
            if (place_meeting(x,y+vsp_fnl,obj_wall))
            {
                while (!place_meeting(x,y+sign(vsp_fnl),obj_wall))
                {
                    y = y + sign(vsp_fnl)
                }
                camera_y = 0
                vsp = 0
            } 
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///camera
    obj_main.x = x
    obj_main.y = y-10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///all player animation
    draw_self()  
    //dir setup
        if (global.pause = 0)
        {
            image_speed = .25
            if (obj_main.player_dmgTaken = 0)
            {
                if (dir != 0)
                {
                    if (attacking = 0)
                    {
                        image_xscale = dir
                    }
                    xadd = dir
                }
            }
            else
            {
                image_xscale = obj_main.player_IFrameDir
            }
        }
    //basic movement
        if (global.pause = 0)
        {
            if (obj_main.player_dmgTaken = 0)
            {
                //movement
                    if (dir != 0)
                    {
                        if (on_ground)
                        {   
                            if (attacking = 0)
                            {
                                sprite_index = spr_playerrun
                            }
                        }
                    }
                    else
                    {
                        if (attacking = 0)
                        {
                            sprite_index = spr_playeridle
                        }
                    }
                //attacking
                    if (attacking &gt; 0)
                    {
                        //fix this shit
                    }
                //climbing
                    if (!on_ground)
                    {
                        if (climb = 0)
                        {
                            if (attacking = 0)
                            {
                                sprite_index = spr_playerjump
                            }
                            if (attacking = 3)
                            {
                                sprite_index = spr_playerrun
                            }
                        }
                        else
                        {
                            sprite_index = spr_playerclimb
                        }
                    }
                
                //crouching
                    if (on_ground)
                    {
                        if (attacking = 0)
                        {
                            if (keyboard_check(vk_down))
                            {
                                if (!touchingNPC)
                                {
                                    sprite_index = spr_playercrouch
                                }
                            }
                        }
                    }
                    if (!keyboard_check(vk_down))
                    {
                        if (sprite_index = spr_playercrouch)
                        {
                            if (!place_meeting(x,y-sprite_get_height(spr_playeridle),obj_wall))
                            {
                                if (!place_meeting(x,y-sprite_get_height(spr_playeridle)/2,obj_wall))
                                {
                                    sprite_index = spr_playeridle
                                }
                            }
                            else
                            {
                                if (place_meeting(x,y-sprite_get_height(spr_playeridle)/2,obj_wall))
                                {
                                    sprite_index = spr_playeridle
                                }
                            }
                        }
                    }
                }
                //dmg animation
                    else
                    {
                        /*
                            add player dmg animation here
                        */
                        sprite_index = spr_playeridle
                    }
                }
                //pause effects
                    if (global.pause &gt; 0)
                    {
                        if (global.pause = 4)
                        {
                            sprite_index = spr_playeridle
                        }
                        if (global.pause &lt; 4)
                        {
                            image_speed = 0
                        }
                    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
