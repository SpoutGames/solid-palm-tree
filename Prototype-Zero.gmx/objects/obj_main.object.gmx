<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation code
    //unsorted
        in_level = 0
        set = 0
        line = 0
        audio = 100
        particles = 3
        lock = 0
        fullscreen = 0
        clock = false
        time = 0
        pause_press = 0
        row = 0
        cursorx_down = 0
        cursorx_left = 0
        cursorx_right = 0
        aria_opinion = 0
        development = 1
    
    //player
        playerHpMax = 10
        playerHp = 10
        playerHpDisplay = 0
        playerHpVisible = 0 
        playerHpAlpha = 0
        playerHpFade = 0
        player_IFrameDir = 0
        player_IFrame = 0 
        player_slimeDmgTaken = 0
        player_dmgTaken = 0
        player_setI = 0
        //inventory
            equipment = 0
            keyItem = 0
            note = 0
            option = 0
            quit = 0
            inventory_press = 0
            equipment_select = 0
            lock = 0
            wLock = 0
            hLock = 0
            cLock = 0
            aLock = 0
            lLock = 0
            next = 0
    
    //NPC control
        ushtok_meet = 0
        aria_meet = 0
        chief_meet = 0
        hudgin_meet = 0
        ilya_meet = 0 
        main_story = 0
        enigma_story = 0
    
    //weapons
        fist = 0        
        hudgin_sword = 100
        enigma_bow = 100
        weapon_max = 0
        weapon = 0
        weapon_select = 0
        head_select = 0
        chest_select = 0
        arm_select = 0
        leg_select = 0
    //not being used
        laser_pistol = 100
    
    //Parts
        //leg
            leg = 0
            leg_max = 0
            part_LegDash = 100
            part_LegMultijump = 100
            part_LegWallclimb = 100
    //boss'
        battle_start = 0
        battle_bar_l = 0
        ilya_display = 0
        boss_hp = 0
        boss_hp_max = 0
        boss_display = 0
        boss_hp_display = 0
        boss_open = 0
        boss_active = 0
        time2 = 0
        time3 = 0
        open = 0
    
    //spawn determine
        //world
            tutorial = 1
            hub = 0
            level_1 = 0
            level_2 = 0
            level_3 = 0
            //in level
                instance = 0
    
    //path completion
        overworld = 0
        position = 0
        path_1 = 0
        path_2 = 0
        path_3 = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize
//variables
key_left = (keyboard_check_pressed(global.key_left) || gamepad_button_check_pressed(0,global.ckey_left))
key_right = (keyboard_check_pressed(global.key_right) || gamepad_button_check_pressed(0,global.ckey_right))
key_up = (keyboard_check_pressed(global.key_up) || gamepad_button_check_pressed(0,global.ckey_up))
key_down = (keyboard_check_pressed(global.key_down) || gamepad_button_check_pressed(0,global.ckey_down))
key_down_held = (keyboard_check(global.key_down) || gamepad_button_check(0,global.ckey_down))
key_confirm = (keyboard_check_pressed(global.key_confirm) || gamepad_button_check_pressed(0,global.ckey_confirm))
key_attack = (keyboard_check_pressed(global.key_attack) || gamepad_button_check_pressed(0,global.ckey_attack))
key_pause = (keyboard_check_pressed(global.pause_button) || gamepad_button_check_pressed(0,global.ckey_pause))
key_pause_release = (keyboard_check_released(global.pause_button) || gamepad_button_check_released(0,global.ckey_pause))
key_inventory = (keyboard_check_pressed(global.key_inventory) || gamepad_button_check_pressed(0,global.ckey_inventory))
key_inventory_release = (keyboard_check_released(global.key_inventory) || gamepad_button_check_released(0,global.ckey_inventory))
on_ground = place_meeting(x,y+1,obj_wall)

//setups
if (room = rm_titlescreen)
{
    titlescreen = 1
    main_story = 0
    global.pause = 0
}
if (room != rm_titlescreen)
{
    titlescreen = 0
}

if (clock = true)
{
    time += 1
}

//x and y are set in obj_camera
view_xview[0] = -view_wview[0]/2 + x
view_yview[0] = -view_hview[0]/2 + y
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu's
    //pause management
        if (instance_exists(obj_player))
        {
            //for menu
                if (pause_press = 0)
                {
                    if (global.pause = 0)
                    {
                        if (key_pause)
                        {
                            global.pause = 1
                            set = -1
                            lock = 0
                            line = 0
                            pause_press = 1
                            keyboard_clear(key_pause)
                        }
                    }
                }
                if (pause_press = 0)
                {
                    if (global.pause = 1)
                    {
                        if (key_pause)
                        {
                            global.pause = 0
                            keyboard_clear(key_pause)
                        }
                    }
                }
                if (key_pause_release)
                {
                    pause_press = 0
                }
            //for inventory
                if (inventory_press = 0)
                {
                    if (global.pause = 0)
                    {
                        if (key_inventory)
                        {
                            global.pause = 2
                            equipment = 0
                            keyItem = 0
                            note = 0
                            option = 0
                            quit = 0
                            inventory_press = 1
                            keyboard_clear(key_inventory)
                        }
                    }
                }
                if (inventory_press = 0)
                {
                    if (global.pause = 2)
                    {
                        if (key_inventory)
                        {
                            global.pause = 0
                            line = 0
                            keyboard_clear(key_inventory)
                        }
                    }
                }
                if (key_inventory_release)
                {
                    inventory_press = 0
                }
        }
        //mainblock
            if (titlescreen = 1)
            {
                //titlescreen - mainscreen
                    if (set = 0)
                    {
                        if (lock = 0)
                        {
                            line = clamp(line,0,4)
                            if (line-1 &gt;= 0)
                            {
                                if (key_up)
                                {
                                    line -= 1
                                }
                            }
                            if (line+1 &lt;= 4)
                            {
                                if (key_down)
                                {
                                    line += 1
                                }
                            }
                            //selection
                            if (line = 0)
                            {
                                cursorx = 64
                                cursory = 64*2
                                if (key_confirm)
                                {
                                    lock = 1
                                    global.fade = 1
                                    instance_create(1,1,obj_fade)
                                    main_story = 0
                                    enigma_story = 0
                                    keyboard_clear(key_confirm)
                                }
                            }
                            if (line = 1)
                            {
                                cursorx = 64
                                cursory = 64*4
                                if (key_confirm)
                                {
                                
                                }
                            }
                            if (line = 2)
                            {
                                cursorx = 64
                                cursory = 64*6
                                if (key_confirm)
                                {
                                    keyboard_clear(key_confirm)
                                    set = 1
                                    line = 0
                                }
                            }
                            if (line = 3)
                            {
                                cursorx = 64
                                cursory = 64*8
                                if (key_confirm)
                                {
                                    set = -1
                                }
                            }
                            if (line = 4)
                            {
                                cursorx = 64
                                cursory = 64*10
                                if (key_confirm)
                                {
                                    game_end()
                                }
                            }
                        }   
                    }
                //titlescreen options
                    if (set = 1)
                    {
                        line = clamp(line,0,4)
                        if (lock = 0)
                        {
                            if (line-1 &gt;= 0)
                            {
                                if (key_up)
                                {
                                    line -= 1
                                }
                            }
                            if (line+1 &lt;= 4)
                            {
                                if (key_down)
                                {
                                    line += 1
                                }
                            }
                        }
                        if (line = 0)
                        {
                            cursorx = 64
                            cursory = 64*2
                            if (key_right)
                            {
                                lock = 1 
                                keyboard_clear(key_right)
                            }
                        }
                        if (lock = 1)
                        {
                            audio = clamp(audio,0,100)
                            if (audio-20 &gt;= 0)
                            {
                                if (key_down)
                                {
                                    audio -= 20
                                }
                            }
                            if (audio+20 &lt;= 100)
                            {
                                if (key_up)
                                {
                                    audio += 20
                                }
                            }
                            if (key_left)
                            {
                                lock = 0
                                keyboard_clear(key_left)
                            }
                        }
                        if (line = 1)
                        {
                            cursorx = 64
                            cursory = 64*4
                            if (key_confirm)
                            {
                                if window_get_fullscreen()
                                {
                                    window_set_fullscreen(false)
                                    fullscreen = 0
                                }
                                else
                                {
                                    window_set_fullscreen(true)
                                    fullscreen = 1
                                }
                            }
                        }
                        if (line = 2)
                        {
                            cursorx = 64
                            cursory = 64*6
                            if (key_right)
                            {
                                lock = 2
                                keyboard_clear(key_right)
                            }
                        }
                        if (lock = 2)
                        {
                            if (particles+1 &lt;= 3)
                            {
                                if (key_up)
                                {
                                    particles += 1
                                }
                            }
                            if (particles-1 &gt;= 0)
                            {
                                if (key_down)
                                {
                                    particles -= 1
                                }
                            }
                            if (key_left)
                            {
                                lock = 0
                                keyboard_clear(key_left)
                            }
                        }
                        if (line = 3)
                        {
                            cursorx = 64
                            cursory = 64*8
                            //controls
                        }
                        if (line = 4)
                        {
                            cursorx = 64
                            cursory = 64*10
                            if (key_confirm)
                            {
                                set = 0
                                line = 2
                                keyboard_clear(key_confirm)
                            }
                        }
                    }
                }
            //pause menu
                if (instance_exists(obj_player))
                {
                    if (global.pause = 1)
                    {
                        if (set = -1)
                        {
                            line = clamp(line,0,2)
                            if (line-1 &gt;= 0)
                            {
                                if (key_up)
                                {
                                    line -= 1
                                }
                            }
                            if (line+1 &lt;= 2)
                            {
                                if (key_down)
                                {
                                    line += 1
                                }
                            }
                            if (line = 0)
                            {
                                cursory = obj_player.y-40
                                if (key_confirm)
                                {
                                    global.pause = 0
                                }
                            }
                            if (line = 1)
                            {
                                cursory = obj_player.y
                                if (key_confirm)
                                {
                                    global.fade = -1
                                    instance_create(x,y,obj_fade)
                                }
                            }
                            if (line = 2)
                            {
                                cursory = obj_player.y+40
                                if (key_confirm)
                                {
                                    global.fade = -2
                                    instance_create(x,y,obj_fade)
                                    set = 0
                                    line = 0
                                }
                            }
                        }
                    }
            }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player menu
    //notes
    /*
        menuSelection is what the game tells the player they're hovering
        menuselectX is the horizontal visual tell of what the player is hovering
        line's = row's
        row's = collums
        
        
    */
    //player menu
        if (global.pause = 2)
        {
            //section selection
                if (!equipment &amp;&amp; !items &amp;&amp; !notes &amp;&amp; !options &amp;&amp; !save)
                {
                    line = clamp(line,0,4)
                    if (key_up)
                    {
                        if ()
                    }
                    if (key_down)
                    {
                        
                    }
                }
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///overworld
    //overworld control
        if (room = rm_overworld)
        {
            overworld_lock = 0
            if (global.pause = 1)
            {
                global.pause = 0
            }
            if (global.pause = 3)
            {
                global.pause = 0
            }
        }
        else
        {
            overworld_lock = 1
        }
        //obj_exit
            //obj_fade
                //lvl 1
                    if (overworld_lock = 0)
                    {
                        if (position = 0)
                        {
                            level_1 = 1
                            level_3 = 0
                            if (key_confirm)
                            {
                                global.fade = 2
                                instance = 0
                                instance_create(1,1,obj_fade)
                            }
                            //to hub
                                if (path_1 = 1)
                                {
                                    if (key_down)
                                    {
                                        position = 1
                                    }
                                }
                            //to lvl 2
                                if (path_2 = 1)
                                {
                                    if (key_up)    
                                    {
                                        position = 2
                                    }
                                }   
                        }
                    //hub
                        if (position = 1)
                        {
                            hub = 1
                            level_2 = 0
                            if (key_confirm)
                            {
                                global.fade = 3
                                instance = 0
                                instance_create(1,1,obj_fade)
                            }
                            //to lvl 1 
                                if (path_1 = 1)
                                {
                                    if (key_up)
                                    {
                                        position = 0
                                    }
                                }
                            //to lvl 3
                                if (path_3 = 1)
                                {
                                    if (key_down)
                                    {
                                        position = 4
                                    }
                                }
                        }
                    //lvl 2
                        if (position = 2)
                        {
                            level_2 = 1
                            hub = 0
                            if (key_confirm)
                            {
                                global.fade = 4
                                instance = 0
                                instance_create(1,1,obj_fade)
                            }
                            //to lvl 1
                                if (path_2 = 1)
                                {
                                    if (key_down)
                                    {
                                        position = 0
                                    }
                                }
                        }
                    }
                
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player (Hp, Iframes, Attacking)
    //player hp
        playerHpDisplay = playerHp
        if (playerHp != playerHpMax)
        {
            playerHpFade = 1
        }
        else
        {
            playerHpFade = -1
        }
        if (playerHpFade = 1)
        {
            if (playerHpAlpha &lt; 1)
            {
                playerHpAlpha += 1/60
            }
        }
        if (playerHpFade = -1)
        {
            if (playerHpAlpha &gt; 0)
            {
                playerHpAlpha -= 1/60
            }
        }
    //Iframes
        if (player_dmgTaken != 0)
        {
            player_dmgTaken -= 1
            obj_player.hsp = 2*-player_IFrameDir
        }
    //weapons
        //weapon handling
            weapon = clamp(weapon,0,weapon_max)
            if (global.pause = 0)
            {
                if (instance_exists(obj_player))
                {
                    xadd = obj_player.xadd
                    //fist
                        if (weapon = 0)
                        {
                            if (key_attack)
                            {
                                instance_create(obj_player.x,obj_player.y+16,obj_fist)
                            }
                        }
                    //arrow
                        if (enigma_bow = 1)
                        {
                            //work on this
                        }
                    //sword
                        if (weapon = hudgin_sword)
                        {
                            //fix this shit
                            
                            /*
                            if (key_attack)
                            {
                                if (obj_player.on_ground)
                                {
                                    if (key_down)
                                    {
                                        while((instance_exists(obj_hitboxSword1)) || (instance_exists(obj_hitboxSword2)) || (instance_exists(obj_hitboxSword3)))
                                        {
                                            obj_player.hsp_fnl = 0
                                            obj_player.vsp_fnl = 0
                                        }
                                    }
                                    else
                                    {
                                        if (key_attack)
                                        {
                                            //4th hit of combo (Hit away)
                                            {
                                                if (obj_player.attacking = 3.1)
                                                {  
                                                    game_end()
                                                }
                                            }
                                            //4th hit of combo (Hit down)
                                                if (obj_player.attacking = 4)
                                                {
                                                    game_end()
                                                }
                                            //3rd hit of combo (up hit)
                                                if (obj_player.attacking = 2)
                                                {
                                                    obj_player.hsp_fnl = 0
                                                    obj_player.vsp_fnl = -6
                                                    if (!instance_exists(obj_hitboxSword1))
                                                    {
                                                        instance_create(obj_player.x+(obj_player.image_xscale*16),obj_player.y,obj_hitboxSword1)
                                                    }
                                                    if (image_index &lt;= 2)
                                                    {
                                                        if (key_attack)
                                                        {
                                                            if (key_down &amp;&amp; (!key_left || !key_right))
                                                            {
                                                                obj_player.attacking = 4
                                                            }
                                                            if (obj_player.image_xscale = 1)
                                                            {
                                                                if (key_right &amp;&amp; !key_down)
                                                                {
                                                                    obj_player.attacking = 3.1
                                                                }
                                                            }
                                                            if (obj_player.image_xscale = -1)
                                                            {
                                                                if (key_right &amp;&amp; !key_down)
                                                                {
                                                                    obj_player.attacking = 3.2
                                                                }
                                                            }
                                                        }
                                                        else
                                                        {
                                                            obj_player.attacking = 0
                                                        }
                                                    }
                                                }
                                            //2nd hit of combo
                                                if (obj_player.attacking = 1)
                                                {
                                                    obj_player.hsp_fnl = 0
                                                    obj_player.vsp_fnl = 0
                                                    if (!instance_exists(obj_hitboxSword1))
                                                    {
                                                        instance_create(obj_player.x+(obj_player.image_xscale*16),obj_player.y,obj_hitboxSword1)
                                                    }
                                                    if (image_index &lt;= 2)
                                                    {
                                                        if (key_attack)
                                                        {
                                                            next = 1
                                                        }
                                                        else
                                                        {
                                                            next = 0
                                                        }
                                                    }
                                                    if (next = 0)
                                                    {
                                                        obj_player.attacking = 0
                                                    }
                                                    if (next = 1)
                                                    {
                                                        obj_player.attacking = 2
                                                    }
                                                }
                                            //start of combo
                                                if (obj_player.attacking = 0)
                                                {
                                                    obj_player.hsp_fnl = 0
                                                    obj_player.vsp_fnl = 0
                                                    if (!instance_exists(obj_hitboxSword1))
                                                    {
                                                        instance_create(obj_player.x+(obj_player.image_xscale*16),obj_player.y,obj_hitboxSword1)
                                                    }
                                                    if (image_index &lt;= 2)
                                                    {
                                                        if (key_attack)
                                                        {
                                                            next = 1
                                                        }
                                                        else
                                                        {
                                                            next = 0
                                                        }
                                                    }
                                                    if (next = 0)
                                                    {
                                                        obj_player.attacking = 0
                                                    }
                                                    if (next = 1)
                                                    {
                                                        obj_player.attacking = 1
                                                    }
                                                }
                                        }
                                    }
                                }
                                else
                                {
                                    if (key_down)
                                    {
                                        
                                    }
                                    else
                                    {
                                        
                                    }
                                }
                            }
                        }
                            */
                }
            }
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///bosses
//time2 and time3 for opening boss cutscene
//time4 for closing boss cutscene
if (battle_start = 1)
{
    if (open = 1)
    {
        if (battle_bar_l &lt; 160)
        {
            battle_bar_l += 8
        }
        if (battle_bar_l &gt;= 160/2)
        {
            if (string_length("Danger!") &gt; time2)
            {
                time2 += .5
            }
        }
        if (battle_bar_l &gt;= 160)
        {
            time3 += 1
            if (time3 = 60)
            {
                open = 0
            }
        }
    }
    else
    {
        if (battle_bar_l &gt; 0)
        {
            battle_bar_l -= 8
        }
        if (time2 &gt; 0)
        {
            time2 -= .8
        }
        if (battle_bar_l &lt;= 0)
        {
            boss_hp_display = 0
            battle_start = 0
            boss_open = 1
            global.pause = 0
        }
    }   
}
else
{
    battle_bar_l = 0
    time2 = 0
    time3 = 0
}
if (ilya_display = 1)
{
    if (boss_open)
    {
        boss_hp_max = 1
        boss_hp = 1
        if (boss_hp_display != boss_hp)
        {
            boss_hp_display += boss_hp/30
            boss_display = boss_hp_display
        }
        else
        {
            boss_active = 1
            boss_open = 0
        }
    }
    if (boss_active)
    {
        boss_hp = clamp(boss_hp,0,boss_hp_max)
        boss_hp_display = boss_hp
    }
    if (!boss_open)
    {
        if (boss_hp = 0)
        {
            if (main_story &lt; 3)
            {
                main_story = 3
            } 
            if (boss_display != 0)
            {
                boss_display -= 1/30
            }
            if (boss_display &lt;= 0)
            {
                obj_ilya.message_display = 1
                obj_ilya.progress = 0
                obj_ilya.advance = 0
                ilya_display = 0
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///enemies
    //easy
        if (global.difficulty = 0)
        {   
            //enemies
                //slime
                    if (instance_exists(obj_slime))
                    {
                        slimeJumpTime = 120
                    }
        }
    //medium
        if (global.difficulty = 1)
        {
            //enemies
                //slime
                    if (instance_exists(obj_slime))
                    {
                        slimeJumpTime = 90
                    }
            //dmg's and I frames
                //dmg's
                    if (player_slimeDmgTaken = 1)
                    {
                        /*
                            add in armor variable
                        */
                        playerHp -= 1
                        player_dmgTaken = 10
                        player_slimeDmgTaken = 0
                    }
                //Iframe
                    if (player_setI = 1)
                    {
                        player_IFrame = 30
                        player_setI = 0
                    }
                    if (player_IFrame &gt; 0)
                    {
                        player_IFrame -= 1
                    }
        }
    //hard
        if (global.difficulty = 2)
        {
            //enemies
                //slime
                    if (instance_exists(obj_slime))
                    {
                        slimeJumpTime = 60
                    }
        }
    //insane
        if (global.difficulty = 3)
        {
            //enemies
                //slime
                    if (instance_exists(obj_slime))
                    {
                        slimeJumpTime = 30
                    }
        }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cutscenes
//cutscenes
if (room = rm_intro)
{
    if (!instance_exists(obj_shuttle))
    {
        instance_create(-32,512-(32*3),obj_shuttle)
        obj_shuttle.image_xscale = 6
        obj_shuttle.image_yscale = 6
    }
    if (time = 180)
    {
        clock = false
        global.fade = 2
        instance_create(x,y,obj_fade)
        time = 0
    }   

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///development
if (keyboard_check_pressed(ord("O")))
{
    global.wall_jump = 1
    global.multiple_jump = 1
    weapon_max += 1
    hudgin_sword = weapon_max
    leg_max += 1
    part_LegDash = leg_max
}
if (keyboard_check_pressed(vk_backspace))
{
    global.pause = 0
    room_goto(rm_test)
}
if (keyboard_check_pressed(ord("I")))
{
    main_story += 1
}
if (keyboard_check_pressed(ord("K")))
{
    boss_hp -= 1
}
if (keyboard_check_pressed(ord("U")))
{
    path_1 = 1
    path_2 = 1
    path_3 = 1
}
if (keyboard_check_pressed(ord("Q")))
{
    instance_create(x+200,y,obj_slime)
}
if (keyboard_check_pressed(ord("Y")))
{
    if (playerHp+1 &lt;= playerHpMax)
    {
        playerHp += 1
    }
}
if (keyboard_check_pressed(ord("H")))
{
    if (playerHp-1 &gt;= 0)
    {
        playerHp -= 1
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///all
draw_set_font(fnt_default)
draw_set_alpha(1)

if (titlescreen = 1)
{
    if (set = 0)
    {
        draw_sprite(spr_cursor,0,cursorx,cursory)
        draw_sprite(spr_text_NewGame,0,64*2,64*2)
        draw_sprite(spr_text_Continue,0,64*2,64*4)
        draw_sprite(spr_text_Options,0,64*2,64*6)
        draw_sprite(spr_text_Credits,0,64*2,64*8)
        draw_sprite(spr_text_ExitGame,0,64*2,64*10)

    }
    if (set = 1)   
    {
        if (lock = 0)
        {
            draw_sprite(spr_cursor,0,cursorx,cursory)
        }
        if (lock = 1)
        {
            draw_sprite_ext(spr_cursor,0,64*5.5,64*1.3,1,1,90,c_white,1)
            draw_sprite_ext(spr_cursor,0,64*5.5,64*2.7,1,1,-90,c_white,1)
        }
        draw_sprite(spr_text_Audio,0,64*2,64*2)
        if (audio = 100)
        {
            draw_sprite(spr_text_100,0,64*5,64*2)
        }
        if (audio = 80)
        {
            draw_sprite(spr_text_80,0,64*5,64*2)
        }
        if (audio = 60)
        {
            draw_sprite(spr_text_60,0,64*5,64*2)
        }
        if (audio = 40)
        {
            draw_sprite(spr_text_40,0,64*5,64*2)
        }
        if (audio = 20)
        {
            draw_sprite(spr_text_20,0,64*5,64*2)
        }
        if (audio = 0)
        {
            draw_sprite(spr_text_0,0,64*5,64*2)
        }
        draw_sprite(spr_text_Fullscreen,0,64*2,64*4)
        draw_sprite(spr_text_Particles,0,64*2,64*6)
        if (lock = 2)
        {
            draw_sprite_ext(spr_cursor,0,64*6.5,64*5.3,1,1,90,c_white,1)
            draw_sprite_ext(spr_cursor,0,64*6.5,64*6.7,1,1,-90,c_white,1)
        }
        if (particles = 3)
        {
            draw_sprite(spr_text_High,0,64*6,64*6)
        }
        if (particles = 2)
        {
            draw_sprite(spr_text_Medium,0,64*6,64*6)
        }
        if (particles = 1)
        {
            draw_sprite(spr_text_Low,0,64*6,64*6)
        }
        if (particles = 0)
        {
            draw_sprite(spr_text_None,0,64*6,64*6)
        }
        draw_sprite(spr_text_Controls,0,64*2,64*8)
        draw_sprite(spr_text_Back,0,64*2,64*10)
        
    }
}
//menu
if (instance_exists(obj_player))
{
    //battle start
    if (battle_start = 1)
    {
        draw_set_alpha(1)
        draw_roundrect_colour_ext((obj_player.x-view_wview[0]/4),obj_player.y,(obj_player.x-view_wview[0]/4)+battle_bar_l,obj_player.y-5,0,0,c_white,c_white,1)
        draw_set_alpha(.5)
        draw_roundrect_colour_ext((obj_player.x-view_wview[0]/4),obj_player.y,(obj_player.x-view_wview[0]/4)+battle_bar_l,obj_player.y-5,0,0,c_maroon,c_maroon,0)
        draw_set_alpha(1)
        draw_set_color(c_maroon)
        draw_set_font(fnt_utility)
        draw_text_ext_transformed(obj_player.x-view_wview[0]/4,obj_player.y-55,string_copy("Danger!",0,ceil(time2)),20,view_wview[0],2,3,0)
        draw_set_alpha(1)
        draw_set_font(fnt_default)
    }
    else if (battle_start = 0)
    {
        //ilya hp
        if (ilya_display = 1)
        {
            draw_roundrect_colour_ext(obj_player.x-view_wview[0]/4,obj_player.y-125,obj_player.x-view_wview[0]/4+160*boss_display,obj_player.y-117,0,0,c_black,c_black,0) 
            draw_roundrect_colour_ext(obj_player.x-view_wview[0]/4,obj_player.y-125,obj_player.x-view_wview[0]/4+160*boss_hp_display,obj_player.y-117,0,0,c_maroon,c_maroon,0) 
            draw_roundrect_colour_ext(obj_player.x-view_wview[0]/4,obj_player.y-125,obj_player.x-view_wview[0]/4+160*boss_display,obj_player.y-117,0,0,c_white,c_white,1)
            draw_set_font(fnt_boss)
            draw_set_color(c_gray)
            draw_set_halign(fa_center)
            draw_text_ext_transformed(obj_player.x,obj_player.y-128,string_copy("Ilya the Tired Witch",0,20*boss_hp_display),10,1000,.5,.5,0)
            draw_set_halign(fa_left)
        }
    }
    
    //player pause
    if (global.pause = 1)
    {
        if (set = -1)
        {
            draw_sprite(spr_text_box,0,obj_player.x,obj_player.y)
            draw_sprite(spr_pause_cursor,0,obj_player.x-62,cursory)
            draw_sprite(spr_text_paused,0,obj_player.x,obj_player.y-80)
            draw_sprite(spr_text_Resume,0,obj_player.x-50,obj_player.y-40)
            draw_sprite(spr_text_Overworld,0,obj_player.x-50,obj_player.y)
            draw_sprite(spr_text_Main_menu,0,obj_player.x-50,obj_player.y+40)
        }
    }
    //inventory
    if (global.pause = 2)
    {
        if (!equipment &amp;&amp; !keyItem &amp;&amp; !note &amp;&amp; !option &amp;&amp; !quit)
        {
            draw_set_color(c_black)
            draw_set_alpha(.4)
            draw_roundrect_ext(obj_player.x-view_wview-10,obj_player.y-view_hview-10,obj_player.x+view_wview+10,obj_player.y+view_hview+10,0,0,0)
            draw_set_alpha(1)
            draw_roundrect_ext(obj_player.x-view_wview/2,obj_player.y-view_hview-10,obj_player.x+view_wview/2-2,obj_player.y-view_hview/2+25,0,0,0)
            draw_set_color(c_gray)
            draw_set_halign(fa_center)
            draw_set_font(fnt_boss)
            draw_text_ext_transformed(obj_player.x,obj_player.y+view_hview/2-35,"[Game Pause]",10,1000,.75,.75,0)
            draw_set_color(c_white)
            draw_roundrect_ext(obj_player.x-view_wview/2,obj_player.y-view_hview/2-10,obj_player.x+view_wview/2-2,obj_player.y-view_hview/2+25-10,0,0,1)
            draw_roundrect_ext(obj_player.x-view_wview/2,obj_player.y-view_hview/2-10,obj_player.x+view_wview/2-2,obj_player.y+view_hview/2-12,0,0,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x-view_wview/2+22,obj_player.y-view_hview/2+4,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x-view_wview/2+88,obj_player.y-view_hview/2+4,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x+view_wview/2-88,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x+view_wview/2-24,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_menuSelect,0,obj_player.x+menuSelectx,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_set_color(c_gray)
            draw_text_ext_transformed(obj_player.x+menuSelectx,obj_player.y-view_hview/2+15,menuSelection,10,1000,.5,.5,0)
            draw_set_font(fnt_default)
            draw_set_halign(fa_left)
        }
        if (equipment = 1)
        {
            draw_set_color(c_black)
            draw_set_alpha(.4)
            draw_roundrect_ext(obj_player.x-view_wview-10,obj_player.y-view_hview-10,obj_player.x+view_wview+10,obj_player.y+view_hview+10,0,0,0)
            draw_set_alpha(1)
            draw_roundrect_ext(obj_player.x-view_wview/2,obj_player.y-view_hview-10,obj_player.x+view_wview/2-2,obj_player.y-view_hview/2+25,0,0,0)
            draw_set_color(c_gray)
            draw_roundrect_ext(obj_player.x-view_wview/2,obj_player.y-view_hview/2-10,obj_player.x+view_wview/2-2,obj_player.y-view_hview/2+25-10,0,0,1)
            draw_roundrect_ext(obj_player.x-view_wview/2,obj_player.y-view_hview/2-10,obj_player.x+view_wview/2-2,obj_player.y+view_hview/2-12,0,0,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x-view_wview/2+30,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x-view_wview/2+80,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x-view_wview/2+130,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x+view_wview/2-130,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x+view_wview/2-80,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_invCircle,0,obj_player.x+view_wview/2-30,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            draw_sprite_ext(spr_menuSelect,0,obj_player.x+menuSelectx,obj_player.y-view_hview/2+3,1,1,0,c_white,1)
            if (weapon_select = 1)
            {
                draw_set_color(c_black)
                draw_set_alpha(1)
                draw_roundrect_ext(obj_player.x,obj_player.y-view_hview/2+35,obj_player.x,obj_player.y-view_hview/2+65,0,0,1)
                draw_set_color(c_white)
                draw_roundrect_ext(obj_player.x,obj_player.y-view_hview/2+35,obj_player.x,obj_player.y-view_hview/2+65,0,0,1)
            }
            if (head_select = 1)
            {
                draw_set_color(c_black)
                draw_set_alpha(1)
                draw_roundrect_ext(obj_player.x,obj_player.y,obj_player.x,obj_player.y,0,0,0)
                draw_set_color(c_white)
                draw_roundrect_ext(obj_player.x,obj_player.y,obj_player.x,obj_player.y,0,0,1)
            }
            if (chest_select = 1)
            {
                draw_set_color(c_black)
                draw_roundrect_ext(obj_player.x,obj_player.y,obj_player.x,obj_player.y,0,0,0)
                draw_set_color(c_white)
                draw_roundrect_ext(obj_player.x,obj_player.y,obj_player.x,obj_player.y,0,0,1)
            }
            if (arm_select = 1)
            {
                draw_set_color(c_black)
                draw_roundrect_ext(obj_player.x,obj_player.y,obj_player.x,obj_player.y,0,0,0)
                draw_set_color(c_white)
                draw_roundrect_ext(obj_player.x,obj_player.y,obj_player.x,obj_player.y,0,0,1)
            }
            if (leg_select = 1)
            {
                draw_set_color(c_black)
                draw_set_alpha(1)
                draw_roundrect_ext(obj_player.x,obj_player.y-view_hview/2+35,obj_player.x,obj_player.y-view_hview/2+65,0,0,1)
                draw_set_color(c_white)
                draw_roundrect_ext(obj_player.x,obj_player.y-view_hview/2+35,obj_player.x,obj_player.y-view_hview/2+65,0,0,1)
            }
        }
    }
    
    //player hp
        draw_set_alpha(playerHpAlpha)
        draw_set_color(c_black)
        draw_roundrect_ext(obj_player.x-11,obj_player.y-5,obj_player.x+9,obj_player.y-8,0,0,0)
        draw_set_color(c_maroon)
        draw_roundrect_ext(obj_player.x-11,obj_player.y-5,obj_player.x-11+playerHpDisplay*2,obj_player.y-8,0,0,0)
        draw_set_color(c_white)
        draw_roundrect_ext(obj_player.x-11,obj_player.y-5,obj_player.x+9,obj_player.y-8,0,0,1)
        draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///development
if (development = 1)
{
    if (instance_exists(obj_player))
    {
        draw_set_color(c_blue)
        draw_text(obj_player.x-100,obj_player.y-200,obj_player.attacking)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
